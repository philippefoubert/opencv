cmake_minimum_required(VERSION 3.5)
project(opencv_highgui_gtk)

get_filename_component(OpenCV_SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../../.." ABSOLUTE)
include("${OpenCV_SOURCE_DIR}/cmake/OpenCVPluginStandalone.cmake")

# scan dependencies
set(WITH_GTK ON)
include("${OpenCV_SOURCE_DIR}/modules/highgui/cmake/init.cmake")

ocv_warnings_disable(CMAKE_CXX_FLAGS -Wno-deprecated-declarations)

set(OPENCV_PLUGIN_DEPS core imgproc imgcodecs)
if(TARGET ocv.3rdparty.gtk3)
  set(__deps ocv.3rdparty.gtk3)
elseif(TARGET ocv.3rdparty.gtk2)
  set(__deps ocv.3rdparty.gtk2)
elseif(TARGET ocv.3rdparty.gtk)
  set(__deps ocv.3rdparty.gtk)
else()
  message(FATAL_ERROR "Missing dependency target for GTK libraries")
endif()
ocv_create_plugin(highgui "opencv_highgui_gtk" "${__deps}" "GTK" "src/window_gtk.cpp")

message(STATUS "GTK: ${GTK2_VERSION}")
if(HAVE_GTK3)
  message(STATUS "GTK+: ver ${GTK3_VERSION}")
elseif(HAVE_GTK)
  message(STATUS "GTK+: ver ${GTK2_VERSION}")
else()
  message(FATAL_ERROR "GTK+: NO")
endif()
if(HAVE_GTK)
  if(HAVE_GTHREAD)
    message(STATUS "GThread : YES (ver ${GTHREAD_VERSION})")
  else()
    message(STATUS "GThread : NO")
  endif()
  if(HAVE_GTKGLEXT)
    message(STATUS "GtkGlExt: YES (ver ${GTKGLEXT_VERSION})")
  else()
    message(STATUS "GtkGlExt: NO")
  endif()
endif()
